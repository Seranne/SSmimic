unique(finaltable$ethnicity)
unique(finaltable$marital_status)
unique(finaltable$insurance)
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
write.csv(finaltable, file = "finaltable.csv")
# Sample size
length(unique(finaltable$hadm_id))
library(readr)
finaltable <- read_csv("F:/SSmimic/finaltable.csv")
View(finaltable)
finaltable <- read_csv("/SSmimic/Final Code and Write Up/finaltable.csv")
library(survival)
library(readr)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(sjPlot)
library(survival)
cond <- clogit(finaltable$drug ~ finaltable$ethnicity + strata(finaltable$mean.pain), method = "exact")
cond <- clogit(finaltable$drug ~ finaltable$ethnicity + strata(finaltable$mean.pain), method = "exact")
cond <- clogit(finaltable$drug ~ finaltable$age + strata(finaltable$mean.pain), method = "exact")
library(readr)
finaltable <- read_csv("F:/SSmimic/Final Code and Write Up/finaltable.csv")
View(finaltable)
finaltable <- left_join(main.table , IVtable_nodup, "hadm_id")
finaltable <-  select(finaltable, "subject_id.y", "hadm_id", "icustay_id", "age", "gender", "ethnicity", "marital_status", "insurance", "los_hospital", "los_icu", "admityear", "mean.pain", "med.pain", "max_pain", "oasis", "e_score", "drug")
colnames(finaltable)[1] <- "subject_id"
finaltable$drug[finaltable$drug == "D5W"] <- NA
finaltable$drug[finaltable$drug == "Hydrocortisone Na Succinate"] <- NA
finaltable$drug[finaltable$drug == "Soln."] <- NA
finaltable$drug[finaltable$drug == "Soln"] <- NA
finaltable$drug[finaltable$drug == "Hydrocortiso"] <- NA
finaltable$drug[finaltable$drug == "Syringe"] <- NA
finaltable$drug[finaltable$drug == "5% Dextrose"] <- NA
# Replacing NA to 0 and receiving an IV opioid to 1:
finaltable$drug<- ifelse(is.na(finaltable$drug),0,1)
View(finaltable)
# categorize race into 4 categories
finaltable$ethnicity <- ifelse(grepl("BLACK",finaltable$ethnicity),"BLACK", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("WHITE",finaltable$ethnicity),"WHITE", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("HISPANIC",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ASIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("UN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("MUL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("INDIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("SOUTH",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ISLAND",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("DECL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("EAST",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("PORTU",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity[is.na(finaltable$ethnicity)]<-"OTHER"
#categorize marital status into 4 categories
finaltable$marital_status <- ifelse(grepl("MARRIED",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("LIFE PARTNER",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("DIVORCED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("SEPARATED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("WIDOW",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("UN",finaltable$marital_status),"OTHER", finaltable$marital_status)
finaltable$marital_status[is.na(finaltable$marital_status)]<-"OTHER"
#categorize insurance into 3 catergories
finaltable$insurance <- ifelse(grepl("Medi",finaltable$insurance),"Government", finaltable$insurance)
#check that ethnicity, marital status and insurance were correctly categorised
unique(finaltable$ethnicity)
unique(finaltable$marital_status)
unique(finaltable$insurance)
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable <- left_join(main.table , IVtable_nodup, "hadm_id")
finaltable <-  select(finaltable, "subject_id.y", "hadm_id", "icustay_id", "age", "gender", "ethnicity", "marital_status", "insurance", "los_hospital", "los_icu", "admityear", "mean.pain", "med.pain", "max_pain", "oasis", "e_score", "drug")
colnames(finaltable)[1] <- "subject_id"
View(finaltable)
finaltable$drug[finaltable$drug == "D5W"] <- NA
finaltable$drug[finaltable$drug == "Hydrocortisone Na Succinate"] <- NA
finaltable$drug[finaltable$drug == "Soln."] <- NA
finaltable$drug[finaltable$drug == "Soln"] <- NA
finaltable$drug[finaltable$drug == "Hydrocortiso"] <- NA
finaltable$drug[finaltable$drug == "Syringe"] <- NA
finaltable$drug[finaltable$drug == "5% Dextrose"] <- NA
# Replacing NA to 0 and receiving an IV opioid to 1:
finaltable$drug<- ifelse(is.na(finaltable$drug),0,1)
View(finaltable)
write.csv(finaltable, file = "finaltable.csv")
# Sample size
length(unique(finaltable$hadm_id))
finaltable <- read_csv("/SSmimic/Final Code and Write Up/finaltable.csv")
# categorize race into 4 categories
finaltable$ethnicity <- ifelse(grepl("BLACK",finaltable$ethnicity),"BLACK", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("WHITE",finaltable$ethnicity),"WHITE", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("HISPANIC",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ASIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("UN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("MUL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("INDIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("SOUTH",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ISLAND",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("DECL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("EAST",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("PORTU",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity[is.na(finaltable$ethnicity)]<-"OTHER"
#categorize marital status into 4 categories
finaltable$marital_status <- ifelse(grepl("MARRIED",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("LIFE PARTNER",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("DIVORCED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("SEPARATED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("WIDOW",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("UN",finaltable$marital_status),"OTHER", finaltable$marital_status)
finaltable$marital_status[is.na(finaltable$marital_status)]<-"OTHER"
#categorize insurance into 3 catergories
finaltable$insurance <- ifelse(grepl("Medi",finaltable$insurance),"Government", finaltable$insurance)
#check that ethnicity, marital status and insurance were correctly categorised
unique(finaltable$ethnicity)
unique(finaltable$marital_status)
unique(finaltable$insurance)
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
finaltable <- read_csv("/SSmimic/Final Code and Write Up/finaltable.csv")
library(readr)
finaltable <- read_csv("F:/SSmimic/finaltable.csv")
View(finaltable)
library(readr)
finaltable <- read_csv("F:/SSmimic/Final Code and Write Up/finaltable.csv")
View(finaltable)
length(unique(finaltable$hadm_id))
length(unique(finaltable$subject_id))
length(unique(finaltable$subject_id[finaltable$drug == 1]))
length(unique(finaltable$hadm_id[finaltable$drug == 1]))
length(unique(finaltable$hadm_id[finaltable$drug == 0]))
length(unique(finaltable$subject_id[finaltable$drug == 0]))
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
library(tableone)
library(tidyverse)
library(dplyr)
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
finaltable <- read_csv("/SSmimic/Final Code and Write Up/finaltable.csv")
# categorize race into 4 categories
finaltable$ethnicity <- ifelse(grepl("BLACK",finaltable$ethnicity),"BLACK", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("WHITE",finaltable$ethnicity),"WHITE", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("HISPANIC",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ASIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("UN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("MUL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("INDIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("SOUTH",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ISLAND",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("DECL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("EAST",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("PORTU",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity[is.na(finaltable$ethnicity)]<-"OTHER"
#categorize marital status into 4 categories
finaltable$marital_status <- ifelse(grepl("MARRIED",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("LIFE PARTNER",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("DIVORCED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("SEPARATED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("WIDOW",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("UN",finaltable$marital_status),"OTHER", finaltable$marital_status)
finaltable$marital_status[is.na(finaltable$marital_status)]<-"OTHER"
#categorize insurance into 3 catergories
finaltable$insurance <- ifelse(grepl("Medi",finaltable$insurance),"Government", finaltable$insurance)
#check that ethnicity, marital status and insurance were correctly categorised
unique(finaltable$ethnicity)
unique(finaltable$marital_status)
unique(finaltable$insurance)
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
write.csv(finaltable, file = "finaltable.csv")
write.csv(finaltable, file = "finaltable.csv")
library(tableone)
library(tidyverse)
library(dplyr)
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
library(readr)
finaltable <- read_csv("F:/SSmimic/Final Code and Write Up/finaltable.csv")
View(finaltable)
library(tableone)
library(tidyverse)
library(dplyr)
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
finaltable <- read_csv("/SSmimic/Final Code and Write Up/finaltable.csv")
# categorize race into 4 categories
finaltable$ethnicity <- ifelse(grepl("BLACK",finaltable$ethnicity),"BLACK", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("WHITE",finaltable$ethnicity),"WHITE", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("HISPANIC",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ASIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("UN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("MUL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("INDIAN",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("SOUTH",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("ISLAND",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("DECL",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("EAST",finaltable$ethnicity),"OTHER", finaltable$ethnicity)
finaltable$ethnicity <- ifelse(grepl("PORTU",finaltable$ethnicity),"HISPANIC", finaltable$ethnicity)
finaltable$ethnicity[is.na(finaltable$ethnicity)]<-"OTHER"
#categorize marital status into 4 categories
finaltable$marital_status <- ifelse(grepl("MARRIED",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("LIFE PARTNER",finaltable$marital_status),"MARRIED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("DIVORCED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("SEPARATED",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("WIDOW",finaltable$marital_status),"DIVORCED/WIDOWED", finaltable$marital_status)
finaltable$marital_status <- ifelse(grepl("UN",finaltable$marital_status),"OTHER", finaltable$marital_status)
finaltable$marital_status[is.na(finaltable$marital_status)]<-"OTHER"
#categorize insurance into 3 catergories
finaltable$insurance <- ifelse(grepl("Medi",finaltable$insurance),"Government", finaltable$insurance)
#check that ethnicity, marital status and insurance were correctly categorised
unique(finaltable$ethnicity)
unique(finaltable$marital_status)
unique(finaltable$insurance)
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
write.csv(finaltable, file = "finaltable.csv")
library(tableone)
library(tidyverse)
library(dplyr)
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
library(readr)
finaltable <- read_csv("F:/SSmimic/finaltable.csv")
View(finaltable)
library(tableone)
library(tidyverse)
library(dplyr)
read.csv("F://SSmimic/Final Code and Write Up/finaltable.csv")
#adjusted global test for all the years
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age + finaltable$insurance + finaltable$marital_status +finaltable$oasis + finaltable$e_score, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
exp(coefficients(secondlook))
exp(confint(secondlook))
sjp.glm(secondlook)
#adjusted global test for all the years
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
exp(coefficients(secondlook))
exp(confint(secondlook))
sjp.glm(secondlook)
#adjusted global test for all the years
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
#adjusted global test for all the years
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
exp(coefficients(secondlook))
exp(confint(secondlook))
sjp.glm(secondlook)
#adjusted global test for all the years
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
sjp.glm(secondlook)
exp(coefficients(secondlook))
black <- model$coef[2]
black <- secondlook$coef[2]
intercept <- model$coef[1] # intercept
exp(coefficients(secondlook))
black <- secondlook$coef[2]
exp(coefficients(secondlook))
intercept <- secondlook$coef[1] # intercept
black <- secondlook$coef[2]
black
exp(coefficients(secondlook))
intercept <- exp(secondlook$coef[1]) # intercept
blk <- exp(secondlook$coef[2])
hisp <- exp(secondlook$coef[3])
othr <- exp(secondlook$coef[4])
pain <- exp(secondlook$coef[5])
male <- exp(secondlook$coef[6])
age <- exp(secondlook$coef[7])
oasis <- exp(secondlook$coef[8])
newdat <- data.frame(hp=finaltable$ethnicity)
newdat$drug = predict(secondlook, newdata=newdat, type="response")
plot(drug~ethnicity, data=finaltable, col="red4")
lines(finaltable$drug ~ finaltable$ethnicity, newdat, col="green4", lwd=2)
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
newdat <- data.frame(hp=finaltable$ethnicity)
newdat$drug = predict(secondlook, newdata=newdat, type="response")
plot(drug~ethnicity, data=finaltable, col="red4")
lines(finaltable$drug ~ finaltable$ethnicity, newdat, col="green4", lwd=2)
newdat <- data.frame(hp=levels(finaltable$ethnicity))
newdat$drug = predict(secondlook, newdata=newdat, type="response")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
newdat <- data.frame(hp=levels(finaltable$ethnicity[1], finaltable$ethnicity[2], finaltable$ethnicity[3])
newdat$drug = predict(secondlook, newdata=newdat, type="response")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
newdat <- data.frame(hp=levels(finaltable$ethnicity[1], finaltable$ethnicity[2], finaltable$ethnicity[3]))
require(ggplot2)
ggplot(finaltable, aes(finaltable$ethnicity, as.numeric(finaltable$drug)-1, color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill=sex)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(finaltable$ethnicity, as.numeric(finaltable$drug)-1, color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill=finaltable$mean.pain)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(finaltable$mean.pain, as.numeric(finaltable$drug)-1, color=finaltable$ethnicity)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill=finaltable$mean.pain)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(finaltable$mean.pain, as.numeric(finaltable$drug), color=finaltable$ethnicity)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill=finaltable$mean.pain)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(as.numeric(levels(finaltable$ethnicity)), as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill=finaltable$mean.pain)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(as.numeric(levels(finaltable$ethnicity)), as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill= as.numeric(levels(finaltable$ethnicity))) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(as.numeric(levels(finaltable$ethnicity)), as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill= as.numeric(levels(finaltable$ethnicity)))) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
ggplot(finaltable, aes(as.numeric(levels(finaltable$ethnicity)), as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill= finaltable$ethnicity)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
a <- as.numeric(levels(finaltable$ethnicity))
ggplot(finaltable, aes(a, as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill= finaltable$ethnicity)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
require(ggplot2)
a <- levels(finaltable$ethnicity))
require(ggplot2)
a <- levels(finaltable$ethnicity)
ggplot(finaltable, aes(a, as.numeric(finaltable$drug), color=finaltable$mean.pain)) +
stat_smooth(method="loess", formula=y~x,
alpha=0.2, size=2, aes(fill= finaltable$ethnicity)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr(finaltable$drug)")
#adjusted global test for all the years
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
#sjp.glm(secondlook)
b <- secondlook$coefficients[2]
#adjusted global test for all the years
finaltable$insurance<- as.factor(finaltable$insurance)
finaltable$ethnicity<- as.factor(finaltable$ethnicity)
finaltable$marital_status<- as.factor(finaltable$marital_status)
finaltable$ethnicity<- relevel(finaltable$ethnicity, ref = "WHITE")
finaltable$marital_status<- relevel(finaltable$marital_status, ref = "MARRIED")
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
#sjp.glm(secondlook)
b <- secondlook$coefficients[2]
b <- secondlook$coefficients[2]
b <- secondlook$coefficients[2]
secondlook <- glm(finaltable$drug ~ finaltable$ethnicity + finaltable$mean.pain + finaltable$gender + finaltable$age +finaltable$oasis, family = binomial(link = "logit"))
summary(secondlook)
confint(secondlook)
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(b,h,o)
boxCILow = c(-0.431987951,-0.127186838,  -0.173518623)
b
h
secondlook$coefficients[2]
secondlook$coefficients[3]
secondlook$coefficients[4]
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(-0.3515534,-0.002075366, -0.1058666)
boxCILow = c(-0.431987951,-0.127186838, -0.173518623)
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(-0.3515534,-0.002075366, -0.1058666),
boxCILow = c(-0.431987951,-0.127186838, -0.173518623),
boxCIHigh = c(-0.2708931821, 0.1244000651, -0.0379375410)
)
# Plot
p <- ggplot(df, aes(x = boxOdds, y = yAxis))
p + geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = boxCIHigh, xmin = boxCILow), size = .5, height = .2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = yAxis, labels = boxLabels) +
scale_x_continuous(breaks = seq(0,7,1) ) +
coord_trans(x = "log10") +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = 3.5, label ="Model p < 0.001\nPseudo R^2 = 0.10", size = 3.5, hjust = 0) + ggtitle("Intention to remove box turtles from the road")
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(-0.3515534,-0.002075366, -0.1058666),
boxCILow = c(-0.431987951,-0.127186838, -0.173518623),
boxCIHigh = c(-0.2708931821, 0.1244000651, -0.0379375410)
)
# Plot
p <- ggplot(df, aes(x = boxOdds, y = yAxis))
p + geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = boxCIHigh, xmin = boxCILow), size = .5, height = .2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = yAxis, labels = boxLabels) +
scale_x_continuous(breaks = seq(0,7,1) ) +
coord_trans(x = "log10") +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = 3.5, label ="Model p < 0.001\nPseudo R^2 = 0.10", size = 3.5, hjust = 0) + ggtitle("Intention to remove box turtles from the road")
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(-0.3515534,-0.002075366, -0.1058666),
boxCILow = c(-0.431987951,-0.127186838, -0.173518623),
boxCIHigh = c(-0.2708931821, 0.1244000651, -0.0379375410)
)
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = length(boxLabels):1,
boxOdds = c(-0.3515534,-0.002075366, -0.1058666),
boxCILow = c(-0.431987951,-0.127186838, -0.173518623),
boxCIHigh = c(-0.2708931821, 0.1244000651, -0.0379375410)
)
# Plot
p <- ggplot(df, aes(x = boxOdds, y = yAxis))
p + geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = boxCIHigh, xmin = boxCILow), size = .5, height = .2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = yAxis, labels = boxLabels) +
scale_x_continuous(breaks = seq(0,7,1) ) +
coord_trans(x = "log10") +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = 3.5, label ="Model p < 0.001\nPseudo R^2 = 0.10", size = 3.5, hjust = 0) + ggtitle("Intention to remove box turtles from the road")
# Create labels
boxLabels = c("Black", "Hispanic", "Other")
# Enter summary data. boxOdds are the odds ratios (calculated elsewhere), boxCILow is the lower bound of the CI, boxCIHigh is the upper bound.
df <- data.frame(
yAxis = (length(boxLabels):1),
boxOdds = c(-0.3515534,-0.002075366, -0.1058666),
boxCILow = c(-0.431987951,-0.127186838, -0.173518623),
boxCIHigh = c(-0.2708931821, 0.1244000651, -0.0379375410)
)
# Plot
p <- ggplot(df, aes(x = boxOdds, y = yAxis))
p + geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = boxCIHigh, xmin = boxCILow), size = .5, height = .2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = yAxis, labels = boxLabels) +
scale_x_continuous(breaks = seq(0,7,1) ) +
coord_trans(x = "log10") +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = 3.5, label ="Model p < 0.001\nPseudo R^2 = 0.10", size = 3.5, hjust = 0) + ggtitle("Intention to remove box turtles from the road")
